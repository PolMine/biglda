% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gensim.R
\name{gensim_ldamodel_as_LDA_Gibbs}
\alias{gensim_ldamodel_as_LDA_Gibbs}
\alias{gensim_ldamodel_load}
\alias{dtm_as_bow}
\title{Utilities to interface to gensim.}
\usage{
gensim_ldamodel_as_LDA_Gibbs(model, dtm)

gensim_ldamodel_load(modeldir, modelname)

dtm_as_bow(dtm)
}
\arguments{
\item{model}{An LDA model trained by gensim.}

\item{dtm}{A Document-Term-Matrix (will be turned into BOW data structure).}

\item{modeldir}{Directory where a gensim LDA topic model has been saved.}

\item{modelname}{Name of a gensim LDA topic model. The data for a model
consists of a set of files starting with the modelname each.}
}
\description{
Utilities to interface to gensim.
}
\details{
The \code{gensim_ldamodel_as_LDA_Gibbs()}-function turns a
  gensim/Python model (that may have been loaded using
  \code{gensim_ldamodel_load}) into the class \code{LDA_Gibbs} well-known
  from the \code{topicmodels} package for further processing within R.

Use \code{gensim_ldamodel_load} to load an ldamodel computed by gensim. The 
return value is a \code{LdaModel} Python object that can serve as input to functions
or that can be processed using the \code{reticulate} package.

The input to gensim's LDA modelling methods is a representation of
  corpora in a data format denoted as "BOW". This utility function
  \code{dtm_as_bow} turns a sparse matrix (class
  \code{simple_triplet_matrix}) into the bow input format required by gensim.
}
\examples{
\dontrun{
if (requireNamespace("reticulate")){
  gensim <- reticulate::import("gensim")

  modeldir <- system.file(package = "biglda", "extdata", "gensim")
  modelname <- "germaparlmini"
  
  dtm <- readRDS(
    file = system.file(
      package = "biglda", "extdata", "gensim", "germaparlmini_dtm.rds"
    )
  )
  
  lda <- gensim_ldamodel_load(
    modeldir = system.file(package = "biglda", "extdata", "gensim"),
    modelname = "germaparlmini"
  )

  y <- gensim_ldamodel_as_LDA_Gibbs(model = lda, dtm = dtm)
  topics_terms <- topicmodels::get_terms(y, 10)
  docs_topics <- topicmodels::get_topics(y, 5)
}
}
}
\author{
Andreas Blaette
}
