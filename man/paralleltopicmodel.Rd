% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biglda.R, R/fileops.R
\name{BigTopicModel}
\alias{BigTopicModel}
\alias{ParallelTopicModel}
\alias{mallet_load_topicmodel}
\title{Instantiate and load mallet topicmodel}
\usage{
BigTopicModel(n_topics = 25L, alpha_sum = 5.1, beta = 0.1)

ParallelTopicModel(n_topics = 25L, alpha_sum = 5.1, beta = 0.1)

mallet_load_topicmodel(binfile, instancefile, statefile, verbose = TRUE)
}
\arguments{
\item{n_topics}{Number of topics (single `integer` value).}

\item{alpha_sum}{Passed into constructor.}

\item{beta}{Passet into constructor.}

\item{binfile}{Either a `character` vector containing the path of a mallet 
topic model (ParallelTopicModel), tilde expansion will be appied. Or a 
Java file object.}

\item{instancefile}{Path to a serialized instance list (binary data format).}

\item{statefile}{Path to a statefile (gzipped text file usually ending with
.gz).}

\item{verbose}{A `logical` value, whether to output progress messages.}
}
\description{
Instantiate and load mallet topicmodel
}
\details{
The `BigTopicModel` function will instantiate a Java class object
  `BigTopicModel` which inherits from the `RTopicModel` and the
  `ParallelTopicModel` class. It adds a method `$getDocLengthCounts()` to the
  the classes it inherits from to provide a fast access to document lengths.

The `ParallelTopicModel()` function will instantial a Java class
  object with the same name from the mallet package, see the
  \href{http://mallet.cs.umass.edu/api/cc/mallet/topics/ParallelTopicModel.html}{mallet
  documentation} of the class.

The function `mallet_load_topicmodel()` will load a topic model
  created using mallet into a `BigTopicModel` object.
}
\examples{
fname <- system.file(package = "biglda", "extdata", "mallet", "lda_mallet.bin")
bigmodel <- mallet_load_topicmodel(fname)
bigmodel$getDocLengthCounts()
pta <- ParallelTopicModel()
destfile <- tempfile()
pta$write(rJava::.jnew("java/io/File", destfile))
pta_reloaded <- mallet_load_topicmodel(destfile)

# Restore model from binfile
data_dir <- system.file(package = "biglda", "extdata", "mallet")
binfile <- file.path(data_dir, "lda_mallet.bin")
model <- mallet_load_topicmodel(binfile)

# Restore model from instance- and statefile
model <- mallet_load_topicmodel(
  instancefile = file.path(data_dir, "instance_list.mallet"),
  statefile = file.path(data_dir, "lda_mallet.gz")
)
}
